<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.DiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.feign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.feign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="com.dachen.eureka_ribbon.service.ComputeService"/>
<fullyQualifiedTypeName name="com.dachen.eureka_feign.i.ComputeClientHystrix"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.SpringCloudApplication"/>
<fullyQualifiedTypeName name="com.dachen.gateway.GatewayApplication"/>
<fullyQualifiedTypeName name="zipkin.server.EnableZipkinServer"/>
<fullyQualifiedTypeName name="com.dachen.zipkin_server.ZipkinApp"/>
<fullyQualifiedTypeName name="org.apache.log4j.Level"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.boot.builder.SpringApplicationBuilder"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="com.dachen.config_client.ConfigClientApp"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="com.amazonaws.util.StringUtils"/>
<fullyQualifiedTypeName name="org.apache.commons.lang3.StringUtils"/>
<fullyQualifiedTypeName name="com.dachen.gateway.filter.tools.FilterUtil"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="org.springframework.util.Assert"/>
<fullyQualifiedTypeName name="junit.framework.Assert"/>
<fullyQualifiedTypeName name="org.junit.Assert"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.core.StringRedisTemplate"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.dachen.compute.domain.User"/>
<fullyQualifiedTypeName name="org.apache.ibatis.annotations.Param"/>
</qualifiedTypeNameHistroy>
